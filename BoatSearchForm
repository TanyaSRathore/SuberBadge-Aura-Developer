/* BOAT SEARCH FORM .cmp */
<aura:component implements="force:appHostable,flexipage:availableForAllPageTypes,flexipage:availableForRecordHome,force:hasRecordId" access="global" controller = "BoatSearchFormApexController">
    
    <aura:attribute name = "boatTypes" type = "BoatType__c[]"/>
    <aura:attribute name = "isButtonDisabled" default = "false" type = "Boolean"/>
    
    <aura:handler name = "init" action = "{!c.doInit}" value = "{!this}"/>
    
    <aura:registerEvent name = "formsubmit" type = "c:FormSubmit" />
    
    <lightning:layout horizontalAlign = "center" verticalAlign = "end">
        
            <lightning:select name="boatType" aura:id = "selectboatType">
                <option value = "" label = "All Types"></option>
                <aura:iteration items = "{!v.boatTypes}" var = "bt">
                    <option value = "{!bt.Id}" label = "{!bt.Name}"></option>
                </aura:iteration>
            </lightning:select>
            <lightning:button variant = "brand" label = "Search" onclick = "{!c.onFormSubmit}"/>
        <aura:if isTrue = "{!!v.isButtonDisabled}">
            <lightning:button aura:id = "newButton" variant = "neutral" label = "New" onclick = "{!c.handledNewClick}" />
        </aura:if>
    </lightning:layout>
    
</aura:component>

/* BOAT SEARCH FORM .cmp END */
---------------------------------------------------------------------------------------------------------------------------------------------------------------
/* BOAT SEARCH FORM CONTROLLER .js */
({
	doInit : function(component, event, helper) {
        //console.log('in init');
       var isEnabled = $A.get("e.force:createRecord");
        if(isEnabled){
            component.set('v.isButtonDisabled' , false)
        }
		var action = component.get("c.getBoatTypes");
        action.setCallback(this,function(response){
            if(response.getState() === "SUCCESS"){
                var boatTypeList = response.getReturnValue();
                //console.log('boatTypeList'+ boatTypeList);
                component.set("v.boatTypes",boatTypeList);
            }
        });
        $A.enqueueAction(action);
	},
    
    handledNewClick : function(component,event,helper){
        //console.log('Clicked!');
        var boatTypeVal = component.find("selectboatType").get("v.value");
        //console.log('boatTypeVal '+boatTypeVal);
        var createNewRecord = $A.get('e.force:createRecord');
        console.log('Test' +JSON.stringify(createNewRecord));
        createNewRecord.setParams({
            "entityApiName" : "Boat__c"
            
        });
        if(boatTypeVal){
            createNewRecord.setParams({
                "defaultFieldValues" : {
                    'BoatType__c' : boatTypeVal
                }
            });
        }
        createNewRecord.fire();	
    },
    
    onFormSubmit : function(component,event,helper){
        
        var boatTypeid = component.find("selectboatType").get("v.value");
        var boatTypeData = {
            "boatTypeId" : boatTypeid
        };
        var formSubmitEvent = component.getEvent("formsubmit");
        //console.log('formSubmitEvent '+formSubmitEvent);
        formSubmitEvent.setParams ({
            "formData" : boatTypeData
        });
        //console.log('firing');
        formSubmitEvent.fire();
        
    }
})
/* BOAT SEARCH FORM CONTROLLER .js END */
---------------------------------------------------------------------------------------------------------------------------------------------------------------





