/* BoatSearchResults .cmp */

<aura:component implements="force:appHostable,flexipage:availableForAllPageTypes,flexipage:availableForRecordHome,force:hasRecordId" access="global" controller = 'BoatSearchResults'>
    
    <aura:attribute name = "boats" type = "Boat__c[]"/>
    <aura:attribute name = "noResults" type = "Boolean" default = "false"/>
    <aura:attribute name = "boatTypeId" type = "String" />
    <aura:attribute name = "selectedBoatId" type = "String"/>
    
    <aura:method name = "search" action = "{!c.doSearch}" access = "public">
        <aura:attribute name = "boatTypeId" type = "String"/>
    </aura:method>
    
    <aura:handler name = "BoatSelect" event = "c:BoatSelect" action = "{!c.onBoatSelect}"/>
    
    <aura:if isTrue = "{!v.noResults}">
        <lightning:layoutItem class="slds-align_absolute-center" flexibility="auto" padding="around-small">
            "No boats found"
        </lightning:layoutItem>
    </aura:if>
    <lightning:layout multipleRows="true">
        
        <aura:iteration items = "{!v.boats}" var = "boat">
            <lightning:layoutItem  size="3" flexibility="grow" class="slds-m-around_small">
                <c:BoatTile boat = "{!boat}" selected = "{!boat.Id == v.selectedBoatId ? true : false}"/>
            </lightning:layoutItem>
        </aura:iteration>
        
    </lightning:layout>
    
</aura:component>

/* BoatSearchResults .cmp END */
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
/* BoatSearchResults CONTROLLER .js */

({
    doSearch :function(component,event,helper){
        
        var params = event.getParam('arguments');
        console.log('Params bsr '+params);
        if(params){
            var boatTypeid = params.boatTypeId;
        }
        console.log('Boat SearchResults aura method id '+JSON.stringify(boatTypeid));
        component.set ('v.boatTypeId', boatTypeid );
        helper.onSearch(component);
    } ,
    
    onBoatSelect: function(component,event,helper){
        var boatId = event.getParam("boatId");
        console.log('Boat Id is '+boatId);
        component.set("v.selectedBoatId" , boatId );
        console.log('Set'+component.get("v.selectedBoatId"));
    }
})
/* BoatSearchResults CONTROLLER .js END */
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
/* BoatSearchResults HELPER .js */

({
    onSearch : function(component,event) {
        
        var action = component.get('c.getBoats');
        action.setParams ({
            'boatTypeId' : component.get('v.boatTypeId')
        });
        action.setCallback(this,function(response){
            if(response.getState() === 'SUCCESS'){
                var boatList = response.getReturnValue();
                if(boatList.length === 0){
                    component.set('v.noResults' , true);
                    component.set('v.boats', response.getReturnValue());
                }
                else{
                    console.log('CONTAINS VALUE')
                    component.set('v.boats', response.getReturnValue());
                    console.log('Boats List '+component.get('v.boats'));
                    component.set('v.noResults' , false);
                }
            }
            if(response.getState() === 'ERROR'){
                console.log('ERROR ENCOUNTERED IN BOAT SEARCH RESULTS '+response.getError());
            }
        });
        $A.enqueueAction(action);
        
    }
})
/* BoatSearchResults HELPER .js END */
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------



